# -*- coding: utf-8 -*-
"""RVK BK mappings better

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IlfbTApm6VlbmMoEUIFkQ9HQ_9RwDeDC

Dieses Programm soll zeigen welche RKV Notationen noch kein Mapping zu BK in Cocoda haben. Dazu werden zun채chst alle vorhanden RKV-BK Mappings gespeichert.  
Danach werden alle existierenden RKV Notationen aus mit der coli-conc API ermittelt und verglichen ob bereits ein Mapping existiert.

Schneller w채re alle Notationen aus der XML-Datei zu ermitteln.
"""

import requests
def get_current_mappings(): #Finde vorhandene Mappings
 rk = requests.get('https://coli-conc.gbv.de/api/mappings?fromScheme=http%3A%2F%2Fbartoc.org%2Fen%2Fnode%2F533&toScheme=http%3A%2F%2Fbartoc.org%2Fen%2Fnode%2F18785&limit=100000')
 rk_data = rk.json()

 has_mapping = []
 for item in rk_data:
  has_mapping.append(item["from"]['memberSet'][0]['notation'][0])
 return set(has_mapping) #Da viele RKV Notationen mehrere Mappings haben

def replace_characters(input_string): #RVK Notation f체r die API nutzbar machen
 replaced_string = input_string.replace(",", "%2C").replace(" ", "%2520")
 return replaced_string

def rvk_bk(url_notation, no_mapping, has_mapping): #url_notation = z.B. "A"
 rk = requests.get('https://coli-conc.gbv.de/api/concepts/narrower?uri=http://rvk.uni-regensburg.de/nt/'+url_notation) #Unterbegruppen
 rk_data = rk.json()
 for item in rk_data: #Schleife durch die Konzepte
  notation = item['notation'][0] #z.B. "AV"
  if notation not in has_mapping: #Notation hat noch kein Mapping
   no_mapping.append(notation)
  url_notation = replace_characters(notation)
  if url_notation:
   rvk_bk(url_notation, no_mapping, has_mapping) #Rekursion f체r alle Unterbegruppen
 return no_mapping, has_mapping

def start():
  no_mapping = []
  has_mapping = get_current_mappings()
  rk = requests.get('https://coli-conc.gbv.de/api/voc/top?uri=http://uri.gbv.de/terminology/rvk/') #Hauptgruppen
  rk_data = rk.json()
  for item in rk_data:  #Schleife durch die Konzepte
    notation = item['notation'][0]
    if notation not in has_mapping: #Notation hat noch kein Mapping
      no_mapping.append(notation)
    url_notation = replace_characters(notation)
    rvk_bk(url_notation, no_mapping, has_mapping)
  return no_mapping, has_mapping

no_mapping, has_mapping = start()
print("Fehlende mappings:", no_mapping)
print("Vorhandene mappings:", has_mapping)

with open("rvk_bk_mappings.txt", "w") as file:
    file.write("No mapping: {}\n".format(no_mapping))
    file.write("Has mapping: {}\n".format(has_mapping))